<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBoJIYyNv0TRzjN4JytyIOJLnOhXIiZX8A&libraries=places&callback=initMap" async defer></script>

<script>
var ct = 1;
var count = 1;
function newLoc()
{
	ct++;
	count++;
	//debugger
	// link to delete extended form elements
	var delLink = '<a href="javascript:delIt('+ ct +')" class="btn btn-danger" id="delbtn">Del</a>';


	var div1 = $([
	'<div id="location-'+ct+'" class="form-inline location">',
		'<div class="form-group">',
			'<label for="locationFrom"+>From: </label>',
			'<input type="text" class="form-control" id="locationFrom'+count+'" name="locations[locationFrom'+count+']" placeholder="Enter starting point">',
		'</div>',
		'<div class="form-group">',
			'<label for="locationTo">To: </label>',
			'<input type="text" class="form-control" id="locationTo'+count+'" name="locations[locationTo'+count+']" placeholder="Enter end point">',
		'</div>',
		'<div class="form-group">',
			'<input type="hidden" name="locations[carpool'+count+']" id="carpool'+count+'" value="" autocomplete="off">',
			'<input id="carpool'+count+'" name="locations[carpool'+count+']" type="checkbox" /> ',
			'<label id="carpoolLabel">Carpooling available</label>',
		'</div>',
		'<a href="javascript:delIt('+ ct +')" class="btn btn-danger" id="delbtn">Del</a>',
	'</div>',].join(''))

	$('#newLoc').append(div1);
	$(div1).find('input').each(function() {
		new app.Locations($(this));
	});
}
// function to delete the newly added set of elements
function delIt(eleId)
{
	d = document;
	var ele = d.getElementById('location-'+eleId);
	var parentEle = d.getElementById('newLoc');
	parentEle.removeChild(ele);
}

$(function() {
	$('.location input').each(function() {
		new app.Locations($(this));
	});
  });

// function initMap_old() {
// 	var map = new google.maps.Map(document.getElementById('map'), {
// 	  zoom: 10,
// 	  center: {lat: 30.040495, lng: 31.227477}
// 	});

// 	var map2 = new google.maps.Map(document.getElementById('map2'), {
// 	  zoom: 10,
// 	  center: {lat: 30.040495, lng: 31.227477}
// 	});

// 	var marker = new google.maps.Marker({
// 	  position: {lat: 30.040495, lng: 31.227477},
// 	  map: map
// 	});
// 	map.addListener('click', function(e) {
// 	  placeMarkerAndPanTo(marker, e.latLng, map, "start");
// 	});
	  
// 	var marker2 = new google.maps.Marker({
// 	  position: {lat: 30.040495, lng: 31.227477},
// 	  map: map2
// 	});
// 	map2.addListener('click', function(e2) {
// 	  placeMarkerAndPanTo(marker2, e2.latLng, map2, "end");
// 	});

// 	if (navigator.geolocation) {
// 	    navigator.geolocation.getCurrentPosition(function (position) {
// 		    var pos = {
// 		      lat: position.coords.latitude,
// 		      lng: position.coords.longitude
// 		    };
// 		    lat = position.coords.latitude;
// 		    lng = position.coords.longitude;
// 			document.getElementById("latStart").value = lat;
// 			document.getElementById("lngStart").value = lng;
// 			document.getElementById("latEnd").value = lat;
// 			document.getElementById("lngEnd").value = lng;
// 		    map.setCenter(pos);
// 		    map2.setCenter(pos);
// 		    marker.setPosition(pos);
// 		    marker2.setPosition(pos);
// 	    });
// 	}

// 	var autocomplete = new google.maps.places.Autocomplete(document.getElementById('locationFrom'));
// 	var autocomplete2 = new google.maps.places.Autocomplete(document.getElementById('locationTo'));

// 	var geocoder = new google.maps.Geocoder();

// 	document.getElementById('submit').addEventListener('click', function() {
// 		geocodeAddress(geocoder, map, marker, "start");
// 		geocodeAddress(geocoder, map2, marker2, "end");
// 	});

// 	// document.getElementById('locationFrom').addEventListener('click', function() {
// 	// 	geocodeAddress(geocoder, map, marker, "start");
// 	// }, false);
// 	// document.getElementById('locationTo').addEventListener('change', function() {
// 	// 	geocodeAddress(geocoder, map2, marker2, "end");
// 	// }, false);

// }

// function placeMarkerAndPanTo(marker, latLng, map, mapName) {
//   marker.setPosition(latLng);
//   map.panTo(latLng);
//   var splitted = latLng.toString().split(",");
//   var lat = splitted[0].substring(1);
//   var lng = splitted[1].substring(1, splitted[1].length-1);

//   if(mapName === "start") {
// 	var element = document.getElementById("latStart");
// 	element.value = lat;

// 	var element2 = document.getElementById("lngStart");
// 	element2.value = lng;
//   } else {
//   	var element = document.getElementById("latEnd");
// 	element.value = lat;

// 	var element2 = document.getElementById("lngEnd");
// 	element2.value = lng;
//   }
// }

function initMap() {
	var map;
	var marker;
	var marker2;

	var pinImage = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter_withshadow&chld=A|FF0000|0000FF", new google.maps.Size(21, 34), new google.maps.Point(0,0), new google.maps.Point(10, 34));
    var pinImage2 = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter_withshadow&chld=B|0000FF|FF0000", new google.maps.Size(21, 34), new google.maps.Point(0,0), new google.maps.Point(10, 34));

	if (navigator.geolocation) {
	    navigator.geolocation.getCurrentPosition(function (position) {
		    var pos = {
		      lat: position.coords.latitude,
		      lng: position.coords.longitude
		    };
		    var pos2 = {
		      lat: position.coords.latitude + 0.01,
		      lng: position.coords.longitude + 0.01
		    };
			map = new google.maps.Map(document.getElementById('map'), {
			  zoom: 10,
			  center: pos
			});

			// marker = new google.maps.Marker({
			//   position: pos,
			//   map: map,
			//   draggable: true,
   //            icon: pinImage
			// });

			// marker2 = new google.maps.Marker({
			//   position: {
		 //      lat: position.coords.latitude + 0.01,
		 //      lng: position.coords.longitude + 0.01
		 //      },
			//   map: map,
			//   draggable: true,
   //            icon: pinImage2
			// });
			
			// google.maps.event.addListener(marker, 'dragend', function(marker2, map) 
			// {
			// 	var latLng = marker.getPosition();
			//     var splitted = latLng.toString().split(",");
			// 	var lat = splitted[0].substring(1);
			// 	var lng = splitted[1].substring(1, splitted[1].length-1);

			// 	document.getElementById("latStart").value = lat;
			// 	document.getElementById("lngStart").value = lng;
			// 	Route(marker, marker2, map);
			// });
			  
			// google.maps.event.addListener(marker2, 'dragend', function(marker, map) 
			// {
			// 	var latLng = marker2.getPosition();
			//     var splitted = latLng.toString().split(",");
			// 	var lat = splitted[0].substring(1);
			// 	var lng = splitted[1].substring(1, splitted[1].length-1);

			// 	document.getElementById("latEnd").value = lat;
			// 	document.getElementById("lngEnd").value = lng;
			// 	Route(marker, marker2, map);
			// });

		    lat = position.coords.latitude;
		    lng = position.coords.longitude;
			document.getElementById("latStart").value = lat;
			document.getElementById("lngStart").value = lng;
			document.getElementById("latEnd").value = lat + 0.01;
			document.getElementById("lngEnd").value = lng + 0.01;

			var directionsService = new google.maps.DirectionsService;
			var directionsDisplay = new google.maps.DirectionsRenderer({
				draggable: true,
				map: map
			});

			displayRoute(pos, pos2, directionsService, directionsDisplay);

			directionsDisplay.addListener('directions_changed', function() {
				var orig = directionsDisplay.getDirections().request.origin;
				var dest = directionsDisplay.getDirections().request.destination;
				if(!isNaN(parseFloat(orig.lat()))) {
					document.getElementById("latStart").value = orig.lat();
					document.getElementById("lngStart").value = orig.lng();
					document.getElementById("latEnd").value = dest.lat();
					document.getElementById("lngEnd").value = dest.lng();
				}
			});

			var autocomplete = new google.maps.places.Autocomplete(document.getElementById('locationFrom'));
			var autocomplete2 = new google.maps.places.Autocomplete(document.getElementById('locationTo'));

			var geocoder = new google.maps.Geocoder();

			document.getElementById('submit').addEventListener('click', function() {
				geocodeAddress(geocoder, directionsService, directionsDisplay, "start", function(posStart){
					var split = posStart.split('$');
					document.getElementById("latStart").value = split[0];
					document.getElementById("lngStart").value = split[1];
				});
				geocodeAddress(geocoder, directionsService, directionsDisplay, "end", function(posEnd){
					var split = posEnd.split('$');
					document.getElementById("latEnd").value = split[0];
					document.getElementById("lngEnd").value = split[1];

					var lat = document.getElementById("latStart").value;
					var lng = document.getElementById("lngStart").value;
					var posStart = new google.maps.LatLng(lat, lng);
					posEnd = new google.maps.LatLng(split[0], split[1]);
					displayRoute(posStart, posEnd, directionsService, directionsDisplay);
				});
			});
	    }, function(error) {
            switch(error.code) {
                case error.PERMISSION_DENIED:
                    alert("User denied the request for Geolocation.");
                    break;
                case error.POSITION_UNAVAILABLE:
                    alert("Location information is unavailable.");
                    break;
                case error.TIMEOUT:
                    alert("The request to get user location timed out.");
                    break;
                case error.UNKNOWN_ERROR:
                    alert("An unknown error occurred.");
                    break;
            }
        });
	}

	// document.getElementById('locationFrom').addEventListener('click', function() {
	// 	geocodeAddress(geocoder, map, marker, "start");
	// }, false);
	// document.getElementById('locationTo').addEventListener('change', function() {
	// 	geocodeAddress(geocoder, map2, marker2, "end");
	// }, false);
}

// function geocodeAddress(geocoder, map, marker, point) {
// 	if(point == "start") {
// 		var address = document.getElementById('locationFrom').value;
// 	} else {
// 		var address = document.getElementById('locationTo').value;
// 	}
// 	geocoder.geocode({'address': address}, function(results, status) {
// 	  if (status === google.maps.GeocoderStatus.OK) {
//     	map.setCenter(results[0].geometry.location);
//     	marker.setPosition(results[0].geometry.location);
//     	if(point == "start") {
//     		document.getElementById("latStart").value = results[0].geometry.location.lat();
// 			document.getElementById("lngStart").value = results[0].geometry.location.lng();
// 		} else {
// 	    	document.getElementById("latEnd").value = results[0].geometry.location.lat();
// 		 	document.getElementById("lngEnd").value = results[0].geometry.location.lng();
// 		}
// 	  } else {
// 	    alert('Geocode was not successful for the following reason: ' + status);
// 	  }
// 	});
// }

function geocodeAddress(geocoder, directionsService, directionsDisplay, point, callback) {
	if(point == "start") {
		var address = document.getElementById('locationFrom').value;
	} else {
		var address = document.getElementById('locationTo').value;
	}

	geocoder.geocode({'address': address}, function(results, status) {
	  if (status === google.maps.GeocoderStatus.OK) {
	  	var add = results[0].geometry.location.lat()+"$"+results[0].geometry.location.lng(); 
	  	callback(add);
	  } else {
	    alert('Geocode was not successful for the following reason: ' + status);
	  }
	});
}

function displayRoute(origin, destination, service, display) {
  service.route({
    origin: origin,
    destination: destination,
    travelMode: google.maps.TravelMode.DRIVING
  }, function(response, status) {
    if (status === google.maps.DirectionsStatus.OK) {
      display.setDirections(response);
    } else {
      alert('Could not display directions due to: ' + status);
    }
  });
}

</script>

<div style="padding-top: 10px;">
	<div style="position: absolute; top: 0px; left: 0px; right: 0px; bottom: 0px;">
		<div id="map"></div>
	</div>

	<input type="text" class="form-control" id="locationFrom" placeholder="Enter starting point" style="position: absolute; right: 420px; width: 300px;">
	<input type="text" class="form-control" id="locationTo" placeholder="Enter end point" style="position: absolute; right: 120px; width: 300px;">
</div>

<%= form_tag users_choices_path, :id => 'form_id' do %>
	<label style="font-weight: bold; position: absolute; right: 50px; top: 70px;">
			<input type="checkbox" id="carpool" name="carpool" style="position: absolute; right:20px;"> Carpooling available
	</label> 
	<%= submit_tag("Submit", class: "btn btn-success", style: "width: auto; position: absolute; top: 450px;") %>
	
	<input type="text" id="latStart" name="latStart" style="display: none;">
	<input type="text" id="lngStart" name="lngStart" style="display: none;">
	<input type="text" id="latEnd" name="latEnd" style="display: none;">
	<input type="text" id="lngEnd" name="lngEnd" style="display: none;">
<% end %>

<%= submit_tag("Show on map", class: "btn btn-success", style: "width: auto; position: absolute; right: 5px;", id: "submit") %>

<!--div>
<%#= form_tag users_choices_path, :id => 'form_id' do %>
	<div id="newLoc" class="form-inline location" >
		<div id="location-1" class="form-inline">
			<div class="form-group">
				<label for="locationFrom">From: </label>
				<input type="text" class="form-control" id="locationFrom1" name="locations[locationFrom1]" placeholder="Enter starting point">
			</div>
			<div class="form-group">
				<label for="locationTo">To: </label>
				<input type="text" class="form-control" id="locationTo1" name="locations[locationTo1]" placeholder="Enter end point">
			</div>
			<div class="form-group">
				<input type="hidden" name="locations[carpool1]" id="carpool1" value="" autocomplete="off">
				<input id="carpool1" name="locations[carpool1]" type="checkbox" />
				<label id="carpoolLabel">Carpooling available</label>
			</div>
		</div>
	</div>
	<p id="addnew">
		<a href="javascript:newLoc()" class="btn btn-warning">Add new</a>
	</p>
	<%#= submit_tag("Submit", class: "btn btn-success", style: "width: auto") %>
<%# end %>
</div-->

<!-- <form method="post" action="choices" style="margin-top: 20px; " >
	<div id="newLoc" class="form-inline location" >
		<div id="location-1" class="form-inline">
			<div class="form-group">
				<label for="locationFrom">From: </label>
				<input type="text" class="form-control" id="locationFrom1" name="locations[locationFrom1]" placeholder="Enter starting point">
			</div>
			<div class="form-group">
				<label for="locationTo">To: </label>
				<input type="text" class="form-control" id="locationTo1" name="locations[locationTo1]" placeholder="Enter end point">
			</div>
			<input id="carpool" type="checkbox"/> 
			<label id="carpoolLabel">Carpooling available</label>
		</div>
	</div>
	<p id="addnew">
		<a href="javascript:newLoc()" class="btn btn-warning">Add new</a>
	</p>
	<p>
		
		<button type="submit" class="btn btn-success">Submit</button>
	</p>
</form> -->
<!--%= button_to "Submit", users_choices_path, {method: :get, class: 'btn btn-success', style: 'width: 100px'} %-->
<!-- Template -->

<!-- <div id="newTpl" style="display:none" class="form-inline">
	<div class="form-group">
		<label for="locationFrom">From: </label>
		<input type="text" class="form-control" id="locationFrom" placeholder="Enter starting point">
	</div>
	<div class="form-group">
		<label for="locationTo">To: </label>
		<input type="text" class="form-control" id="locationTo" placeholder="Enter end point">
	</div>
		<input id="carpool" type="checkbox"/> 
		<label id="carpoolLabel">Carpooling available</label>
</div> -->

<style>
	body{background-color: #8fb4ff}
   #newLoc {
   		width:600px;
   	}
   	#form_id {
   		margin-top: 20px;
   	}
   #delbtn {
   		margin-left: 0;
   		position: absolute;
	}
	/*.location input {
	  width: 100%;
	  font-size: 1em;
	  padding: .5em 1.3em;
	  background: transparent;
	  border: 1px solid #ddd;
	  border-radius: 2em;
	}

	.location input:focus {
	  border-color: #A5CEF5;
	}*/
	.ui-widget-content {
	  width: 100px;
	  background: #fff;
	  font-size: .9em;
	  padding: .5em 0;
	  border-color: #ddd;
	  box-shadow: 0 .1em .2em rgba(187, 187, 187, 0.64);
	  line-height: 1.2;
	  max-height: 20em;
	  overflow: hidden;
	  overflow-y: auto;
	}

	.ui-menu-item {
	  font-family: 'Helvetica Neue', Helvetica, sans-serif;
	  padding: .4em .4em .4em 4em;
	  position: relative;
	  border: 0;
	  border-left: 5px solid transparent;
	  position: relative;
	}
	.ui-state-focus {
	  background: #fff;
	  border-left-color: #08c;
	  font-weight: 300;
	}

	
	.ui-menu-item .name {
	  display: block;
	  color: #555;
	}

	.ui-state-focus .name {
	  color: #08c;
	}

	#map-container {
	   height: 600px;
	   width: 1000px;
	   border-radius: 16px 16px;
	   border-color: #fff;
	   border-style: solid;
	   box-shadow: 2px 2px 10px #B1B1B1;
	   margin-top: 25px;
	   border-width: 7px;
	 }
	 #map-container2 {
	   height: 400px;
	   width: 100%;
	   border-radius: 16px 16px;
	   border-color: #fff;
	   border-style: solid;
	   box-shadow: 2px 2px 10px #B1B1B1;
	   margin-top: 25px;
	   border-width: 7px;
	 }
	 #map {
	   height: 100%;
	   width: 100%;
	   top:0;
	   left:0;
	 }
	 #map2 {
	   height: 384px;
	   width: 100%;
	 }
</style>